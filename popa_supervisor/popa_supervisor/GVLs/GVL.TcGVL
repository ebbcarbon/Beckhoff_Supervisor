<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <GVL Name="GVL" Id="{9ef0773c-528c-4f84-b841-d3e0f9a56246}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
{attribute ‘OPC.UA.DA’ := ‘1’}
VAR_GLOBAL PERSISTENT
	//Datetime Function Block Tag
	System_Date_Time : Date_Time;
	//System Year
	System_Year : INT;
	//System Month
	System_Month : INT;
	//System Day
	System_Day : INT;
	//System Hour
	System_Hour : INT;
	//System Minute
	System_Minute : INT;
	//System Second
	System_Second : INT;
	//New Day Hour Setpoint for Daily Resets
	Daily_Reset_Hour_Setpoint : INT;
	//New Day Minute Setpoint for Daily Resets
	Daily_Reset_Minute_Setpoint : INT;
	//Daily Reset Bit, True at the time set by Daily_Reset_Hour and Daily_Reset_Minute
	Daily_Reset : BOOL;
	//Analog Scaling Function Block
	Analog_Input_Example : Analog_Scaling;
	//Raw Analog Input
	Analog_Input_Raw : REAL;
	//Raw Input Minimum Scaling(Analog Input Card raw counts)
	Analog_Input_Raw_Min : REAL;
	//Raw Input Maximum Scaling(Analog Input Card raw counts)
	Analog_Input_Raw_Max : REAL;
	//Input Engineering Units(Bar, °C, etc) Minimum Scaling
	Analog_Input_EU_Min : REAL;
	//Input Engineering Units(Bar, °C, etc) Maximum Scaling
	Analog_Input_EU_Max : REAL;
	//Averaging Filter Factor.  Higher=More Filtering, Lower=Less Filtering
	Analog_Input_Filter_Factor : REAL;
	//Scaled Value of Analog Input in Engineering Units
	Analog_Input_Scaled_Value : REAL;
	//Discrete Alarm Example Trigger Bit
	Discrete_Alarm_Trigger : BOOL;
	//Discrete Alarm Function Block
	Discrete_Alarm : ALARM;
	//Common Alarm Acknowledge Bit, from HMI
	ALM_Ack : BOOL;
	//Common Alarm Reset Bit, from HMI
	ALM_Reset : BOOL;
	//Discrete Alarm Priority(0-5)
	Discrete_Alarm_Priority : INT;
	//Discrete Alarm Delay Setpoint(Seconds)
	Discrete_Alarm_Delay_Setpoint : INT;
	//Discrete Alarm Enable/Disable Bit(1=Enabled, 0=Disabled)
	Discrete_Alarm_Enable : BOOL;
	//Discrete Alarm Output 
	Discrete_Alarm_Active: BOOL;
	//Analog Alarm Function Block
	Analog_Alarm : ALARM;
	//Analog Alarm Priority(0-5)
	Analog_Alarm_Priority : INT;
	//Analog Alarm Delay Setpoint(Seconds)
	Analog_Alarm_Delay_Setpoint : INT;
	//Analog Alarm Enable/Disable Bit(1=Enabled, 0=Disabled)
	Analog_Alarm_Enable : BOOL;
	//Analog Alarm Output 
	Analog_Alarm_Active : BOOL;
	//Analog Alarm Low Setpoint
	Analog_Alarm_Low_Setpoint : REAL;
	//Analog Alarm Low Low Setpoint
	Analog_Alarm_Low_Low_Setpoint : REAL;
	//Analog Alarm High Setpoint
	Analog_Alarm_High_Setpoint : REAL;
	//Analog Alarm High-High Setpoint
	Analog_Alarm_High_High_Setpoint : REAL;
	//Alarm Ack TON
	ALM_Ack_TON : TON;
	//Alarm Ack TON Time Setpoint
	ALM_Ack_TON_PT : TIME := T#1S;
	//Alarm Ack TON Accumulated Time
	ALM_Ack_TON_ET : TIME;
	//Alarm Reset TON
	ALM_Reset_TON : TON;
	//Alarm Reset TON Time Setpoint
	ALM_Reset_TON_PT : TIME := T#1S;
	//Alarm Reset TON Accumulated Time
	ALM_Reset_TON_ET : TIME;
	//Motor Starter Function Block
	Motor_Example : Motor_Starter;
	Motor_Run_Feedback : BOOL;
	Motor_Runtime_Maint_Reset : BOOL;
	Motor_Run_Request : BOOL;
	Motor_Fail_to_Start : BOOL;
	Motor_Fail_to_Stop : BOOL;
	Motor_Run_Command : BOOL;
	Motor_Runtime_Today : REAL;
	Motor_Runtime_Total : REAL;
	Motor_Runtime_Maint : REAL;
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>